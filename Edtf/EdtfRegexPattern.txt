(?x)

# This RegEx pattern recognizes valid EDTF base dates, i.e., dates without any
# intervals, sets, choices, before/after flags, etc. It handles all valid dates
# for Levels 0, 1, and 2.
#
# The intent of this pattern is parsing, not strict validation. It will, for example, allow a seasonal
# qualified for a normal month, or a day/time for a season, neither of which is actually allowed.
#
# Named groups are created for the following:
#
#	year		The entire year, including opening and closing parenthesis and flags
#	yearnum		The year number, including sign, exponents, and precision
#	yearopenflags	The open of the year flags
#	yearendflags	The end of the year flags
#	month		The entire month, including parenthesis, but not flags
#	monthnum	The month number
#	seasonqualifier		The optional qualifier for seasons (seasons cannot have days or times)
#	monthopenflags	The open of the month flags
#	monthendflags	The end of the month flags
#	day			The entire day, including parenthesis, but not flags
#	daynum		The day number
#	dayopenflags	The open of the day flags
#	dayendflags	The end of the day flags
#	time		Time in common HH:MM:SS(Z|+-HH:MM) format, which can be parsed natively by .NET easily
#
#	Since only the year is required, the other named groups may not exist.

# YEAR
(?<yearlongind>Y?)
(?<year>
	(?<yearopenflags>[~?%]{0,2})		# year optional opening parens
	(?<yearnum>
		[+-]?							# optional sign
		(?:
			\d+E\d+						# exponential form, no "X" allowed
			|[0-9X]+					# decimal form, "X" allowed 
		)
	)
	(?>S(?<yearprecision>\d+))?			# precision
	(?<yearcloseflags>[~?%]{0,2})		# optional flags and closing paren
)

# MONTH
(?>-
	(?<month>
		(?<monthopenflags>[~?%]{0,2})		# month optional opening paren
		(?<monthnum>(?>[0-9X]{1,2}))
		(?<monthcloseflags>[~?%]{0,2})		# month optional flags and closing parens
	)

	# DAY
	(?>-
		(?<day>
			(?<dayopenflags>[~?%]{0,2})		# day optional opening paren
			(?<daynum>(?>[0-9X]{1,2}))
			(?<daycloseflags>[~?%]{0,2})	# dayoptional flags and closing parens
		)

		# TIME
		(?>T
			(?<hour>[0-9]{2})	# hour
			:?(?<minute>[0-9]{2})		# minute
			:?(?<second>[0-9]{2})		# second
			(?>											# Time zone offset
				(?<tzutc>Z)								# Zulu
				|	(?<tzsign>[+-])
					(?<tzhour>[01][0-9])
					:(?<tzminute>[0-5][0-9])			# HH:MM signed
			)?							# end optional time zone offset
		)?								# end optional time term

	)?									# end optional day term

)?										# end optional month term
$